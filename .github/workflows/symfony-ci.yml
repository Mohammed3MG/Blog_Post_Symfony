name: Symfony CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  symfony-ci:
    runs-on: ubuntu-latest

    env:
      APP_ENV: test
      DATABASE_URL: sqlite:///%kernel.project_dir%/var/data.db

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: > 
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, intl, pdo, pdo_mysql, pdo_sqlite, xdebug # Add xdebug for coverage
          tools: composer, symfony

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction --no-scripts

      - name: Prepare environment
        run: |
          php bin/console doctrine:database:create --env=test || true
          php bin/console doctrine:schema:update --force --env=test

      - name: Run PHPUnit tests with coverage
        run: |
          ./vendor/bin/phpunit --testdox --coverage-text
